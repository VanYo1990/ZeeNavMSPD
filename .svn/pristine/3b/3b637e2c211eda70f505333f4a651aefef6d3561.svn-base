<?php

namespace App\Http\Controllers\Api;

/*
 * 通过 artisan 创建出来的控制器，默认会继承 App\Http\Controllers\Controller，
 * 我们只需要删除 use App\Http\Controllers\Controller 这一行即可，
 * 这样会继承相同命名空间下的 Controller，
 * 也就是我们上一步中添加的那个控制器app/Http/Controllers/Api/Controller.php。
 */
use Illuminate\Http\Request;

use Illuminate\Support\Str;
//use Overtrue\EasySms\EasySms;
use App\Http\Requests\Api\VerificationCodeRequest;

class VerificationCodesController extends Controller
{
    //短信验证控制器

    /*生成 4 位随机码；
     * 用 easySms 发送短信到用户手机；
     * 发送成功后，生成一个 key，在缓存中存储这个 key 对应的手机以及验证码，5 分钟过期；
     * 将 key 以及 过期时间 返回给客户端。
     */
    //public function store(VerificationCodeRequest $request, EasySms $easySms)
    public function store(VerificationCodeRequest $request)
    {
        $phone = $request->phone;

        // 生成4位随机数，左侧补0
        $code = str_pad(random_int(1, 9999), 4, 0, STR_PAD_LEFT);

        // try {
        //     $result = $easySms->send($phone, [
        //         'template' => config('easysms.gateways.aliyun.templates.register'),
        //         'data' => [
        //             'code' => $code
        //         ],
        //     ]);
        // } catch (\Overtrue\EasySms\Exceptions\NoGatewayAvailableException $exception) {
        //     $message = $exception->getException('aliyun')->getMessage();
        //     abort(500, $message ?: '短信发送异常');
        // }

        $key = 'verificationCode_'.Str::random(15);
        $expiredAt = now()->addMinutes(5);
        // 缓存验证码 5 分钟过期。
        \Cache::put($key, ['phone' => $phone, 'code' => $code], $expiredAt);

        return response()->json([
            'key' => $key,
            'code' => $code,
            'expired_at' => $expiredAt->toDateTimeString(),
        ])->setStatusCode(201);
    }
    
}
